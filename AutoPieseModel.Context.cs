//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pizzaria1
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AutopieseEntities : DbContext
    {
        public AutopieseEntities()
            : base("name=AutopieseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Categorie> Categories { get; set; }
        public virtual DbSet<Comanda> Comandas { get; set; }
        public virtual DbSet<Furnizori> Furnizoris { get; set; }
        public virtual DbSet<Produse> Produses { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<produse_view> produse_view { get; set; }
        public virtual DbSet<comanda_view> comanda_view { get; set; }
        public virtual DbSet<furnizor_view> furnizor_view { get; set; }
        public virtual DbSet<vandut_view> vandut_view { get; set; }
    
        public virtual int edit_produse(Nullable<int> cod_produs, string nume, Nullable<float> pret, Nullable<int> cod_categorie, string depozit)
        {
            var cod_produsParameter = cod_produs.HasValue ?
                new ObjectParameter("cod_produs", cod_produs) :
                new ObjectParameter("cod_produs", typeof(int));
    
            var numeParameter = nume != null ?
                new ObjectParameter("nume", nume) :
                new ObjectParameter("nume", typeof(string));
    
            var pretParameter = pret.HasValue ?
                new ObjectParameter("pret", pret) :
                new ObjectParameter("pret", typeof(float));
    
            var cod_categorieParameter = cod_categorie.HasValue ?
                new ObjectParameter("cod_categorie", cod_categorie) :
                new ObjectParameter("cod_categorie", typeof(int));
    
            var depozitParameter = depozit != null ?
                new ObjectParameter("depozit", depozit) :
                new ObjectParameter("depozit", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("edit_produse", cod_produsParameter, numeParameter, pretParameter, cod_categorieParameter, depozitParameter);
        }
    
        public virtual int adauga_comanda(Nullable<int> cod_produs, Nullable<int> cantitate, Nullable<System.DateTime> data, Nullable<int> cod_furnizor, Nullable<int> cod_comanda)
        {
            var cod_produsParameter = cod_produs.HasValue ?
                new ObjectParameter("cod_produs", cod_produs) :
                new ObjectParameter("cod_produs", typeof(int));
    
            var cantitateParameter = cantitate.HasValue ?
                new ObjectParameter("cantitate", cantitate) :
                new ObjectParameter("cantitate", typeof(int));
    
            var dataParameter = data.HasValue ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(System.DateTime));
    
            var cod_furnizorParameter = cod_furnizor.HasValue ?
                new ObjectParameter("cod_furnizor", cod_furnizor) :
                new ObjectParameter("cod_furnizor", typeof(int));
    
            var cod_comandaParameter = cod_comanda.HasValue ?
                new ObjectParameter("cod_comanda", cod_comanda) :
                new ObjectParameter("cod_comanda", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("adauga_comanda", cod_produsParameter, cantitateParameter, dataParameter, cod_furnizorParameter, cod_comandaParameter);
        }
    
        public virtual ObjectResult<sortaredata_vandute_Result> sortaredata_vandute(Nullable<System.DateTime> data1, Nullable<System.DateTime> data2)
        {
            var data1Parameter = data1.HasValue ?
                new ObjectParameter("data1", data1) :
                new ObjectParameter("data1", typeof(System.DateTime));
    
            var data2Parameter = data2.HasValue ?
                new ObjectParameter("data2", data2) :
                new ObjectParameter("data2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sortaredata_vandute_Result>("sortaredata_vandute", data1Parameter, data2Parameter);
        }
    
        public virtual ObjectResult<pretMediu_Result> pretMediu(Nullable<int> category)
        {
            var categoryParameter = category.HasValue ?
                new ObjectParameter("category", category) :
                new ObjectParameter("category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pretMediu_Result>("pretMediu", categoryParameter);
        }
    }
}
